"""add_equity_holdings_and_link_to_options

Revision ID: 2b3e4148dd72
Revises: 
Create Date: 2025-10-23 13:50:43.907100

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2b3e4148dd72'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('equity_holdings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('purchase_order_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('total_shares', sa.Integer(), nullable=False),
    sa.Column('original_cost_basis', sa.Float(), nullable=False),
    sa.Column('initial_purchase_date', sa.DateTime(), nullable=False),
    sa.Column('premium_collected', sa.Float(), nullable=False),
    sa.Column('premium_paid', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('exit_date', sa.DateTime(), nullable=True),
    sa.Column('exit_price', sa.Float(), nullable=True),
    sa.Column('exit_reason', sa.String(length=100), nullable=True),
    sa.Column('realized_pnl', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('opening_ranges',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('timeframe_minutes', sa.Integer(), nullable=False),
    sa.Column('range_high', sa.Float(), nullable=False),
    sa.Column('range_low', sa.Float(), nullable=False),
    sa.Column('range_size', sa.Float(), nullable=False),
    sa.Column('range_size_pct', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_candidates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('scan_time', sa.Time(), nullable=False),
    sa.Column('pre_market_change', sa.Float(), nullable=False),
    sa.Column('volume', sa.Integer(), nullable=False),
    sa.Column('relative_volume', sa.Float(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('criteria_met', sa.Text(), nullable=False),
    sa.Column('selected', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade_decisions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time', sa.Time(), nullable=False),
    sa.Column('action', sa.String(length=10), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('executed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('option_positions',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('closing_order_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('strategy_type', sa.String(length=50), nullable=False),
    sa.Column('equity_holding_id', sa.Integer(), nullable=True),
    sa.Column('entry_date', sa.DateTime(), nullable=False),
    sa.Column('expiration_date', sa.DateTime(), nullable=False),
    sa.Column('dte_at_entry', sa.Integer(), nullable=False),
    sa.Column('net_credit', sa.Float(), nullable=False),
    sa.Column('max_risk', sa.Float(), nullable=False),
    sa.Column('max_profit', sa.Float(), nullable=False),
    sa.Column('roi_target', sa.Float(), nullable=True),
    sa.Column('entry_iv', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('current_value', sa.Float(), nullable=True),
    sa.Column('unrealized_pnl', sa.Float(), nullable=True),
    sa.Column('realized_pnl', sa.Float(), nullable=True),
    sa.Column('exit_date', sa.DateTime(), nullable=True),
    sa.Column('exit_value', sa.Float(), nullable=True),
    sa.Column('exit_reason', sa.String(length=200), nullable=True),
    sa.Column('profit_target_hit', sa.Boolean(), nullable=True),
    sa.Column('needs_management', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['equity_holding_id'], ['equity_holdings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('positions',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('stop_order_id', sa.Integer(), nullable=False),
    sa.Column('opening_range_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('direction', sa.String(length=10), nullable=False),
    sa.Column('entry_time', sa.DateTime(), nullable=True),
    sa.Column('entry_price', sa.Float(), nullable=True),
    sa.Column('shares', sa.Integer(), nullable=False),
    sa.Column('stop_loss_price', sa.Float(), nullable=False),
    sa.Column('take_profit_price', sa.Float(), nullable=False),
    sa.Column('stop_moved', sa.Boolean(), nullable=True),
    sa.Column('trailing_stop_price', sa.Float(), nullable=True),
    sa.Column('range_size', sa.Float(), nullable=False),
    sa.Column('current_price', sa.Float(), nullable=True),
    sa.Column('unrealized_pnl', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('exit_time', sa.DateTime(), nullable=True),
    sa.Column('exit_price', sa.Float(), nullable=True),
    sa.Column('exit_reason', sa.String(length=100), nullable=True),
    sa.Column('realized_pnl', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['opening_range_id'], ['opening_ranges.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('option_legs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=10), nullable=False),
    sa.Column('strike', sa.Float(), nullable=False),
    sa.Column('right', sa.String(length=1), nullable=False),
    sa.Column('expiry', sa.String(length=8), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('fill_price', sa.Float(), nullable=True),
    sa.Column('fill_time', sa.String(length=50), nullable=True),
    sa.Column('commission', sa.Float(), nullable=True),
    sa.Column('entry_delta', sa.Float(), nullable=True),
    sa.Column('entry_gamma', sa.Float(), nullable=True),
    sa.Column('entry_theta', sa.Float(), nullable=True),
    sa.Column('entry_vega', sa.Float(), nullable=True),
    sa.Column('entry_iv', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['position_id'], ['option_positions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('option_legs')
    op.drop_table('positions')
    op.drop_table('option_positions')
    op.drop_table('trade_decisions')
    op.drop_table('stock_candidates')
    op.drop_table('opening_ranges')
    op.drop_table('equity_holdings')
    # ### end Alembic commands ###
